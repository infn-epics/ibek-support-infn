# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/3.1.2/ibek.support.schema.json


module: kima

entity_models:
  - name: KimaUndulatorCreateController
    description: |-
      Create a kima undulator controller
    parameters:
      name:
        type: id
        description: |-
          The name of the controller and its Asyn Port Name

      P:
        type: str
        description: |-
          Device PV Prefix
      R:
        type: str
        description: Device Suffix

      POLL_DELAY:
        type: int
        description: |-
          Read  function : Polling delay time in ms for the polling thread
          Write function : a non-zero value means that the Modbus data should be read once
        default: 1000

      IP:
        type: str
        description: |-
          IP address of the ethernet2serial
        default: 127.0.0.1 ## localhost

      TCPPORT:
        type: int
        description: |-
          Port of the ethernet2serial
        default: 4001

      ASYNPRIO:
        type: int
        description: |-
          ASYN   PRIORITY, Default : 0
        default: 0

      AUTOCONNECT:
        type: int
        description: |-
          Asyn auto connect
          0: Auto connection
          1: no Auto connection
        default: 0

      NOPRECESSESOS:
        type: int
        description: |-
          ASYN   noProcessEos, Default : 0
          https://epics.anl.gov/tech-talk/2020/msg01705.php
        default: 0
    pre_init:
      - value: |
          drvAsynIPPortConfigure("{{name}}_ASYN", "{{IP}}:{{TCPPORT}}", {{ASYNPRIO}}, {{AUTOCONNECT}}, {{NOPRECESSESOS}})
          modbusInterposeConfig("{{name}}_ASYN", 0, 2000, 0)
          # Create the asyn MODBUS interfaces
          ## write coil registers
          drvModbusAsynConfigure("{{name}}_DO", "{{name}}_ASYN", 1, 5, 0, 40, 0, 1000, "kimaUndulator")
          ## write single holding register
          drvModbusAsynConfigure("{{name}}_AO", "{{name}}_ASYN", 1, 6, 0, 100, 0, 1000, "kimaUndulator")

          ## read input registers
          drvModbusAsynConfigure("{{name}}_AI", "{{name}}_ASYN", 1, 4, 0, 100, 0, 1000, "kimaUndulator")
          ## read input registers2
          drvModbusAsynConfigure("{{name}}2_AI", "{{name}}_ASYN", 1, 4, 880, 100, 0, 1000, "kimaUndulator")
          asynSetTraceMask("{{name}}_AI", -1, 0xFF)    # Full tracing for analog inputs
          asynSetTraceIOMask("{{name}}_AI", -1, 0x3)  # Log I/O traffic
          asynReport(10, "{{name}}_AI")
    databases:
      - file: kimaUndulator.db
        args:
          P:
          R:
          device: '{{P}}'
          port: '{{name}}_ASYN'
          AIPORT: '{{name}}_AI'
          AIPORT2: '{{name}}2_AI'
          AOPORT: '{{name}}_AO'
          DOPORT: '{{name}}_DO'

