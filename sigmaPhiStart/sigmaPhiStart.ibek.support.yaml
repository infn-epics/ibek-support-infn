# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/3.1.2/ibek.support.schema.json

module: sigmaPhiStart

# drvAsynIPPortConfigure("{{ASYNPORT}}", "{{IP}}:{{TCPPORT}}", {{ASYNPRIO}}, {{AUTOCONNECT}}, {{NOPRECESSESOS}})
# modbusInterposeConfig("{{ASYNPORT}}",{{MODBUSLINK}},{{TIMEOUT}},{{WRITEDELAY}})
# drvModbusAsynConfigure("{{MODBUSPORT}}", "{{ASYNPORT}}", {{SERVER_ADDR}}, {{FUNC_CODE}}, {{STARTADDR}}, {{DATA_LENGTH}}, {{DATA_TYPE}}, {{POLL_DELAY}}, "{{MODBUS_TYPE}}")

entity_models:
  - name: configure
    description: |-
      This will create an AsynPort connecting to the module
    parameters:
      controllerName:
        type: id
        description: |-
          controller and ASYN PORT name

      P:
        type: str
        description: |-
          controller PREFIX

      IP:
        type: str
        description: |-
          IP address of the Controller

      TCPPORT:
        type: int
        description: |-
          IP PORT
        default: 502

      ASYNPRIO:
        type: int
        description: |-
          ASYN   PRIORITY, Default : 0
        default: 0

      AUTOCONNECT:
        type: int
        description: |-
          Asyn auto connect
          0: Auto connection
          1: no Auto connection
        default: 0

      NOPRECESSESOS:
        type: int
        description: |-
          ASYN   noProcessEos, Default : 0
          https://epics.anl.gov/tech-talk/2020/msg01705.php
        default: 0

      MODBUSLINK:
        type: int
        description: |-
          MODBUS linktype, Default : 0
          0 : TCP/IP
          1 : RTU
          2 : ASCII 
        default: 0

      TIMEOUT:
        type: int
        description: |-
          MODBUS timeout (ms), Default : 2000
        default: 2000

      WRITEDELAY:
        type: int
        description: |-
          MODBUS write delay ms for Serial RTU, Default : 0
        default: 0

      POLL_DELAY:
        type: int
        description: |-
          Read  function : Polling delay time in ms for the polling thread
          Write function : a non-zero value means that the Modbus data should be read once
        default: 1000

    pre_init:
      - value: |
          drvAsynIPPortConfigure("{{controllerName}}", "{{IP}}:{{TCPPORT}}", {{ASYNPRIO}}, {{AUTOCONNECT}}, {{NOPRECESSESOS}})
          modbusInterposeConfig ("{{controllerName}}", {{MODBUSLINK}}, {{TIMEOUT}}, {{WRITEDELAY}})

          drvModbusAsynConfigure ("{{controllerName}}_RD",  "{{controllerName}}", 1,  3, 1, 13, 0, {{POLL_DELAY}}, "SigmaPhi")
          drvModbusAsynConfigure ("{{controllerName}}_CMD",  "{{controllerName}}", 1,  6, 0,  1, 0, {{POLL_DELAY}}, "SigmaPhi")
          drvModbusAsynConfigure ("{{controllerName}}_SET",  "{{controllerName}}", 1, 16, 5,  2, 0, {{POLL_DELAY}}, "SigmaPhi")

  - name: device
    description: |-
      This will create a device instance
    parameters:
      controller:
        type: object
        description: |-
          a reference to the PS controller
      P:
        type: str
        description: Device Prefix
      max:
        type: int
        description: Max Current

    databases:
      - file: $(SIGMAPHISTART)/db/sigmaPhiStart.template
        args:
          device: '{{ controller.P }}:{{ P }}'
          rd_port: '{{ controller.controllerName }}_RD'
          cmd_port: '{{ controller.controllerName }}_CMD'
          set_port: '{{ controller.controllerName }}_SET'
          max: '{{max}}'
      
      
      - file: $(SIGMAPHISTART)/db/unimag.db
        args:
          device: '{{ controller.P }}:{{ P }}'
          

