# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/1.5.0/ibek.support.schema.json


## Create asyn IP port for communication over TCP/IP
#drvAsynIPPortConfigure ("$(RFM1_PORT)", "$(ADDR)")

##asynSetTraceMask($(RFM1_PORT),0,ASYN_TRACEIO_DRIVER)
##asynSetTraceIOMask($(RFM1_PORT),0,ASYN_TRACEIO_ASCII|ASYN_TRACEIO_ESCAPE)

## Load record instances
##dbLoadRecords("../../db/N1911AIOC.db","user=prelz")

#dbLoadRecords("../../db/n1911a.template","DEVICE=RFM1, PORT=$(RFM1_PORT)")




module: AgilentXgs600

defs:
  - name: CreateAgilentGauge
    description: |-
      Create a AgilentXgs600 gauge
    args:
      - type: id
        name: controllerName
        description: |-
          The name of the controller and its Asyn Port Name
      
      - type: str
        name: P
        description: |-
          Device PV Prefix

      - type: str
        name: IP
        description: |-
          IP address of the ethernet2serial
        default: 127.0.0.1 ## localhost

      - type: int
        name: TCPPORT
        description: |-
          Port of the ethernet2serial
        default: 4001
            - type: int
        name: ASYNPRIO
        description: |-
          ASYN   PRIORITY, Default : 0
        default: 0

      - type: int
        name: AUTOCONNECT
        description: |-
          Asyn auto connect
          0: Auto connection
          1: no Auto connection
        default: 0

      - type: int
        name: NOPRECESSESOS

        description: |-
          ASYN   noProcessEos, Default : 0
          https://epics.anl.gov/tech-talk/2020/msg01705.php
        default: 0
    databases:
      # TODO as this is a simulation I have hard coded some of the DB fields,
      # but these could easily be made into arguments above
      #
      # Note: supplying no value means that the argument of the same name is used
      # (the most common case - if you contrive to make args and db fields the same.
      # Which is  good idea for ease of transition from traditional IOCs)
      - file: agilentXgs600Ctlr.template
        args:
          device: "{{controller.P}}"
      - file: agilentXgs600Spt.template
        args:
          device: "{{controller.P}}"
          port: "{{controllerName}}_ASYN"



    pre_init:
      - value: |

          drvAsynIPPortConfigure("{{controllerName}}_ASYN", "{{IP}}:{{TCPPORT}}", {{ASYNPRIO}}, {{AUTOCONNECT}}, {{NOPRECESSESOS}})
          CreateAgilentGauge("XGS600_{{controllerName}}", "{{controllerName}}_ASYN","{{IP}}", "{{TCPPORT}}",{{ASYNPRIO}}, {{AUTOCONNECT}}, {{NOPRECESSESOS}})
      
    post_init:
      - value: |
          dbl    

  - name: SensorCNV
    description: |-
      Template database for the the Agilent XGS-600 CNV Sensor
    args:
      - type: int
        name: GaugeNumber
        description: |-
          Gauge Number

      
      - type: str
        name: Sensor
        description: |-
          T1 .. T4
    databases:    
        - file: agilentXgs600Cnv.template
        args:
          device: "{{controller.P}}"
          port: "{{controllerName}}_ASYN"
          number: {{GaugeNumber}}
          sensor: {{Sensor}}

   

  

  - name: SetPoint
    description: |-
      Template database for Agilent XGS-600 Setpoint
    args:
      - type: int
        name: GaugeNumber
        description: |-
          Gauge Number

      
      - type: str
        name: Sensor
        description: |-
          T1 .. T4
     databases:    
        - file: agilentXgs600Spt.template
        args:
          device: "{{controller.P}}"
          port: "{{controllerName}}_ASYN"
          number: {{GaugeNumber}}
          sensor: {{Sensor}}

  - name: InvertedMagnetronGauge
  description: |-
    Template database for the the Agilent XGS-600 Inverted Megnetron Gauge
  args:
    
    - type: str
      name: Sensor
      description: |-
        I1 .. I4

    - type: str
      name: tcauto
      description: |-
        TC auto on sensor T1 .. T4

    
  databases:    
      - file: agilentXgs600Img.template
      args:
        device: "{{controller.P}}"
        port: "{{controllerName}}_ASYN"
        sensor: {{Sensor}}
        tcauto: {{tcauto}}

