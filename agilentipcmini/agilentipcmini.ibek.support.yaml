# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/3.1.2/ibek.support.schema.json


module: agilent.ipcmini

entity_models:
  - name: controller
    description: |-
      Create a AgilentIpcMini pump controller
    parameters:
      name:
        type: id
        description: |-
          The name of the controller and its Asyn Port Name
      P:  
        type: str
        description: |-
          Device PV Prefix
      IP:
        type: str
        description: |-
          IP address of the ethernet2serial
        default: 127.0.0.1 ## localhost

      TCPPORT:
        type: int
        description: |-
          Port of the ethernet2serial
        default: 4001

      ASYNPRIO:
        type: int
        description: |-
          ASYN   PRIORITY, Default : 0
        default: 0

      AUTOCONNECT:
        type: int
        description: |-
          Asyn auto connect
          0: Auto connection
          1: no Auto connection
        default: 0

      NOPRECESSESOS:
        type: int
        description: |-
          ASYN   noProcessEos, Default : 0
          https://epics.anl.gov/tech-talk/2020/msg01705.php
        default: 0
     
    pre_init:
      - value: |
          drvAsynIPPortConfigure("{{name}}_ASYN", "{{IP}}:{{TCPPORT}}", {{ASYNPRIO}}, {{AUTOCONNECT}}, {{NOPRECESSESOS}})
          epicsEnvSet "STREAM_PROTOCOL_PATH", "$(AGILENTIPCMINI)/db/"

    

  - name: pump
    description: |-
      Template database for the the Agilent Pump channel
    parameters:
      controller:
        type: object
        description: |-
          a reference to the controller
      name:
        type: str
        description: |-
          pump name
        
      channel:
        type: int
        description: |-
          Address of the RS485 chain. 0x80 is the base address for RS232
          The value for the RS485 is 0x80 + the address of the chain
        default: 0x80

    databases:
      - file: ipc.template
        args:
          DEVICE: '{{controller.P}}:{{name}}'
          PORT: '{{controller.name}}_ASYN'
          ADDR: "{{channel}}"

      - file: asynRecord.db
        args:
          P: '{{controller.P}}:{{name}}'
          R: 'ASYNRECORD'
          PORT: '{{controller.name}}_ASYN'
          ADDR: "{{channel}}"
          IMAX: 100
          OMAX: 100

